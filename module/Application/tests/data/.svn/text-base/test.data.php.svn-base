<?php
//queries used by tests
return array(
    array(
        'create' => "CREATE TABLE IF NOT EXISTS `bloco_c100` (
					  `id` int(11) NOT NULL AUTO_INCREMENT,
					  `ind_oper` char(1) DEFAULT NULL COMMENT 'Indicador do tipo de operação: 0- Entrada;\n1- Saída \n',
					  `ind_emit` char(1) DEFAULT NULL COMMENT 'Indicador do emitente do documento fiscal: 0- Emissão própria;\n1- Terceiros \n',
					  `cod_part` varchar(60) DEFAULT NULL COMMENT 'Código do participante (campo 02 do Registro 0150):\n- do emitente do documento ou do remetente das mercadorias, no caso de entradas;\n- do adquirente, no caso de saídas \n',
					  `cod_mod` char(2) DEFAULT NULL COMMENT 'Código do modelo do documento fiscal, conforme a Tabela 4.1.1 \n\n',
					  `cod_sit` char(2) DEFAULT NULL COMMENT 'Código da situação do documento fiscal, conforme a Tabela 4.1.2 \n\n',
					  `ser` char(3) DEFAULT NULL COMMENT 'Série do documento fiscal \n\n',
					  `num_doc` int(9) DEFAULT NULL COMMENT 'Número do documento fiscal \n\n',
					  `chv_nfe` varchar(44) DEFAULT NULL COMMENT 'Chave da Nota Fiscal Eletrônica \n\n',
					  `dt_doc` date DEFAULT NULL COMMENT 'Data da emissão do documento fiscal \n\n',
					  `dt_e_s` date DEFAULT NULL COMMENT 'Data da entrada ou da saída \n\n',
					  `vl_doc` double(16,2) DEFAULT NULL COMMENT 'Valor total do documento fiscal \n\n',
					  `ind_pgto` char(1) DEFAULT NULL COMMENT 'Indicador do tipo de pagamento: 0- À vista;\n1- A prazo;\n9- Sem pagamento. \nObs.: A partir de 01/07/2012 passará a ser: Indicador do tipo de pagamento:\n0- À vista;\n1- A prazo; \n\n2 - Outros \n',
					  `vl_desc` double(16,2) DEFAULT NULL COMMENT 'Valor total do desconto \n\n',
					  `vl_abat_nt` double(16,2) DEFAULT NULL COMMENT 'Abatimento não tributado e não comercial Ex. desconto ICMS nas remessas para ZFM. \n\n',
					  `vl_merc` double(16,2) DEFAULT NULL COMMENT 'Valor total das mercadorias e serviços \n\n',
					  `ind_frt` char(1) DEFAULT NULL COMMENT 'Indicador do tipo do frete: 0- Por conta de terceiros;\n1- Por conta do emitente;\n2- Por conta do destinatário; 9- Sem cobrança de frete. \n\nObs.: A partir de 01/01/2012 passará a ser: Indicador do tipo do frete:\n0- Por conta do emitente;\n1- Por conta do /* comment truncated */ /* destinatário/remetente; \n\n2- Por conta de terceiros; 9- Sem cobrança de frete. \n\n*/',
					  `vl_frt` double(16,2) DEFAULT NULL COMMENT 'Valor do frete indicado no documento fiscal \n\n',
					  `vl_seg` double(16,2) DEFAULT NULL COMMENT 'Valor do seguro indicado no documento fiscal \n\n',
					  `vl_out_da` double(16,2) DEFAULT NULL COMMENT 'Valor de outras despesas acessórias \n\n',
					  `vl_bc_icms` double(16,2) DEFAULT NULL COMMENT 'Valor da base de cálculo do ICMS \n\n',
					  `vl_icms` double(16,2) DEFAULT NULL COMMENT 'Valor do ICMS \n\n',
					  `vl_bc_icms_st` double(16,2) DEFAULT NULL COMMENT 'Valor da base de cálculo do ICMS substituição tributária \n\n',
					  `vl_icms_st` double(16,2) DEFAULT NULL COMMENT 'Valor do ICMS retido por substituição tributária \n\n',
					  `vl_ipi` double(16,2) DEFAULT NULL COMMENT 'Valor total do IPI \n\n',
					  `vl_pis` double(16,2) DEFAULT NULL COMMENT 'Valor total do PIS \n\n',
					  `vl_cofins` double(16,2) DEFAULT NULL COMMENT 'Valor total da COFINS \n\n',
					  `vl_pis_st` double(16,2) DEFAULT NULL COMMENT 'Valor total do PIS retido por substituição tributária \n\n',
					  `vl_cofins_st` double(16,2) DEFAULT NULL COMMENT 'Valor total da COFINS retido por substituição tributária \n\n',
					  PRIMARY KEY (`id`)
					) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;",
        'drop' => "DROP TABLE IF EXISTS  `bloco_c100`;"
    ),
    array(
		'create' => "CREATE TABLE IF NOT EXISTS `bloco_0150` (
					  `id` int(11) NOT NULL AUTO_INCREMENT,
					  `cod_part` varchar(60) DEFAULT NULL COMMENT 'Código de identificação do participante no arquivo. \n\n',
					  `nome` varchar(100) DEFAULT NULL COMMENT 'Nome pessoal ou empresarial do participante. \n\n',
					  `cod_pais` char(5) DEFAULT NULL COMMENT 'Código do país do participante, conforme a tabela \n\n',
					  `cnpj` char(14) DEFAULT NULL COMMENT 'CNPJ do participante. \n\n',
					  `cpf` char(11) DEFAULT NULL COMMENT 'CPF do participante. \n\n',
					  `ie` varchar(11) DEFAULT NULL COMMENT 'Inscrição Estadual do participante. \n\n',
					  `cod_mun` varchar(7) DEFAULT NULL COMMENT 'Código do município, conforme a tabela IBGE \n\n',
					  `suframa` varchar(60) DEFAULT NULL COMMENT 'Número de inscrição do participante na SUFRAMA. \n\n',
					  `end` varchar(60) DEFAULT NULL COMMENT 'Logradouro e endereço do imóvel \n\n',
					  `num` varchar(10) DEFAULT NULL COMMENT 'Número do imóvel \n\n',
					  `compl` varchar(60) DEFAULT NULL COMMENT 'Dados complementares do endereço \n\n',
					  `bairro` varchar(60) DEFAULT NULL COMMENT 'Bairro em que o imóvel está situado \n\n',
					  PRIMARY KEY (`id`)
					) ENGINE=InnoDB DEFAULT CHARSET=utf8;"
					,
        'drop' =>'DROP TABLE IF EXISTS `bloco_0150`;'
        ),
       array(
        	'create' => "CREATE TABLE IF NOT EXISTS `bloco_0200` (
								  `id` int(11) NOT NULL AUTO_INCREMENT,
								  `cod_item` varchar(60) DEFAULT NULL COMMENT 'Código do item \n\n',
								  `descr_item` text COMMENT 'Descrição do item \n\n',
								  `cod_barra` varchar(45) DEFAULT NULL COMMENT 'Representação alfanumérico do código de barra do produto, se houver \n\n',
								  `cod_ant_item` varchar(60) DEFAULT NULL COMMENT 'Código anterior do item com relação à última informação apresentada. \n\n',
								  `unid_inv` char(6) DEFAULT NULL COMMENT 'Unidade de medida utilizada na quantificação de estoques. \n\n',
								  `tipo_item` char(2) DEFAULT NULL COMMENT 'Tipo do item – Atividades Industriais, Comerciais e Serviços:\n00 – Mercadoria para Revenda;\n01 – Matéria-Prima; \n\n02 – Embalagem;\n03 – Produto em Processo;\n04 – Produto Acabado;\n05 – Subproduto;\n06 – Produto Intermediário;\n07 – Material de Uso e Consum /* comment truncated */ /*o; 08 – Ativo Imobilizado;\n09 – Serviços;\n10 – Outros insumos;\n99 – Outras \n*/',
								  `cod_ncm` char(8) DEFAULT NULL COMMENT 'Código da Nomenclatura Comum do Mercosul \n\n',
								  `ex_ipi` char(3) DEFAULT NULL COMMENT 'Código EX, conforme a TIPI \n\n',
								  `cod_gen` int(11) DEFAULT NULL COMMENT 'Código do gênero do item, conforme a Tabela 4.2.1 \n\n',
								  `cod_lst` int(11) DEFAULT NULL COMMENT 'Código do serviço conforme lista do Anexo I da Lei Complementar Federal no 116/03. \n\n',
								  `aliq_icms` double(16,2) DEFAULT NULL COMMENT 'Alíquota de ICMS aplicável ao item nas operações internas \n\n',
								  PRIMARY KEY (`id`)
								) ENGINE=InnoDB DEFAULT CHARSET=utf8;",
		'drop' =>'DROP table IF EXISTS `bloco_0200`;',
		),
		array(
				'create' => "CREATE TABLE IF NOT EXISTS `bloco_c170` (
							  `id` int(11) NOT NULL AUTO_INCREMENT,
							  `num_item` int(3) DEFAULT NULL COMMENT 'Número sequencial do item no documento fiscal \n\n',
							  `cod_item` varchar(60) DEFAULT NULL COMMENT 'Código do item (campo 02 do Registro 0200) \n\n',
							  `descr_compl` text COMMENT 'Descrição complementar do item como adotado no documento fiscal \n\n',
							  `qtd` int(11) DEFAULT NULL COMMENT 'Quantidade do item \n\n',
							  `unid` varchar(6) DEFAULT NULL COMMENT 'Unidade do item (Campo 02 do registro 0190) \n\n',
							  `vl_item` double(16,2) DEFAULT NULL COMMENT 'Valor total do item (mercadorias ou serviços) \n\n',
							  `vl_desc` double(16,2) DEFAULT NULL COMMENT 'Valor do desconto comercial \n\n',
							  `ind_mov` char(1) DEFAULT NULL COMMENT 'Movimentação física do ITEM/PRODUTO: 0. SIM\n1. NÃO \n\n',
							  `cst_icms` int(3) DEFAULT NULL COMMENT 'Código da Situação Tributária referente ao ICMS, conforme a Tabela indicada no item 4.3.1 \n\n',
							  `cfop` int(4) DEFAULT NULL COMMENT 'Código Fiscal de Operação e Prestação \n\n',
							  `cod_nat` varchar(10) DEFAULT NULL COMMENT 'Código da natureza da operação (campo 02 do Registro 0400) \n\n',
							  `vl_bc_icms` double(16,2) DEFAULT NULL COMMENT 'Valor da base de cálculo do ICMS \n\n',
							  `aliq_icms` double(16,2) DEFAULT NULL COMMENT 'Alíquota do ICMS \n\n',
							  `vl_icms` double(16,2) DEFAULT NULL COMMENT 'Valor do ICMS creditado/debitado \n\n',
							  `vl_bc_icms_subs` double(16,2) DEFAULT NULL COMMENT 'Valor da base de cálculo referente à substituição tributária \n\n',
							  `aliq_st` double(16,2) DEFAULT NULL COMMENT 'Alíquota do ICMS da substituição tributária na unidade da federação de destino \n\n',
							  `vl_icms_st` double(16,2) DEFAULT NULL COMMENT 'Valor do ICMS referente à substituição tributária \n\n',
							  `ind_apur` char(1) DEFAULT NULL COMMENT 'Indicador de período de apuração do IPI: 0 - Mensal;\n1 - Decendial \n',
							  `cst_ipi` char(2) DEFAULT NULL COMMENT 'Código da Situação Tributária referente ao IPI, conforme a Tabela indicada no item 4.3.2. \n\n',
							  `cod_enq` char(3) DEFAULT NULL COMMENT 'Código de enquadramento legal do IPI, conforme tabela indicada no item 4.5.3. \n\n',
							  `vl_bc_ipi` double(16,2) DEFAULT NULL COMMENT 'Valor da base de cálculo do IPI \n\n',
							  `aliq_ipi` double(16,2) DEFAULT NULL COMMENT 'Alíquota do IPI \n\n',
							  `vl_ipi` double(16,2) DEFAULT NULL COMMENT 'Valor do IPI creditado/debitado \n\n',
							  `cst_pis` int(2) DEFAULT NULL COMMENT 'Código da Situação Tributária referente ao PIS. \n\n',
							  `vl_bc_pis` double(16,2) DEFAULT NULL COMMENT 'Valor da base de cálculo do PIS \n\n',
							  `aliq_pis_percent` varchar(10) DEFAULT NULL COMMENT 'Alíquota do PIS (em percentual) \n\n',
							  `quant_bc_pis` int(11) DEFAULT NULL COMMENT 'Quantidade – Base de cálculo PIS \n\n',
							  `aliq_pis_real` double(16,2) DEFAULT NULL COMMENT 'Alíquota do PIS (em reais) \n\n',
							  `vl_pis` double(16,2) DEFAULT NULL COMMENT 'Valor do PIS \n\n',
							  `cst_cofins` int(2) DEFAULT NULL COMMENT 'Código da Situação Tributária referente ao COFINS. \n\n',
							  `vl_bc_cofins` double(16,2) DEFAULT NULL COMMENT 'Valor da base de cálculo da COFINS \n\n',
							  `aliq_cofins_percent` varchar(10) DEFAULT NULL COMMENT 'Alíquota do COFINS (em percentual) \n\n',
							  `quant_bc_cofins` int(11) DEFAULT NULL COMMENT 'Quantidade – Base de cálculo COFINS \n\n',
							  `aliq_confins_real` double(16,2) DEFAULT NULL COMMENT 'Alíquota da COFINS (em reais) \n\n',
							  `vl_cofins` double(16,2) DEFAULT NULL COMMENT 'Valor da COFINS \n\n',
							  `cod_cta` varchar(45) DEFAULT NULL COMMENT 'Código da conta analítica contábil debitada/creditada \n\n',
							  PRIMARY KEY (`id`)
							) ENGINE=InnoDB DEFAULT CHARSET=utf8;",
				'drop' =>'DROP table IF EXISTS `bloco_c170`;',
				),
	array(
				'create' => "CREATE TABLE IF NOT EXISTS `resultado_c170x0200` (
							  `bloco_c170_id` int(11) NOT NULL,
							  `bloco_0200_id` int(11) NOT NULL,
							  PRIMARY KEY (`bloco_c170_id`,`bloco_0200_id`),
							  KEY `fk_bloco_c170_has_bloco_0200_bloco_02001_idx` (`bloco_0200_id`),
							  KEY `fk_bloco_c170_has_bloco_0200_bloco_c1701_idx` (`bloco_c170_id`),
							  CONSTRAINT `fk_bloco_c170_has_bloco_0200_bloco_02001` FOREIGN KEY (`bloco_0200_id`) REFERENCES `bloco_0200` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
							  CONSTRAINT `fk_bloco_c170_has_bloco_0200_bloco_c1701` FOREIGN KEY (`bloco_c170_id`) REFERENCES `bloco_c170` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
							) ENGINE=InnoDB DEFAULT CHARSET=utf8;",
				'drop' =>'DROP table IF EXISTS `resultado_c170x0200`;',
	),
	array(
				'create' => "CREATE TABLE IF NOT EXISTS `resultado_c100x0150` (
						  `bloco_c100_id` int(11) NOT NULL,
						  `bloco_0150_id` int(11) NOT NULL,
						  PRIMARY KEY (`bloco_c100_id`,`bloco_0150_id`),
						  KEY `fk_bloco_c100_has_bloco_0150_bloco_01501_idx` (`bloco_0150_id`),
						  KEY `fk_bloco_c100_has_bloco_0150_bloco_c100_idx` (`bloco_c100_id`),
						  CONSTRAINT `fk_bloco_c100_has_bloco_0150_bloco_01501` FOREIGN KEY (`bloco_0150_id`) REFERENCES `bloco_0150` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
						  CONSTRAINT `fk_bloco_c100_has_bloco_0150_bloco_c100` FOREIGN KEY (`bloco_c100_id`) REFERENCES `bloco_c100` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION
						) ENGINE=InnoDB DEFAULT CHARSET=utf8;",
				'drop' =>'DROP table IF EXISTS `resultado_c100x0150`;',
				),	
);